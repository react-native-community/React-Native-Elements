// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Overlay should apply values from theme 1`] = `
<Modal
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  replaceTheme={[Function]}
  transparent={true}
  updateTheme={[Function]}
  visible={true}
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "green",
        "height": "100%",
        "justifyContent": "center",
        "left": 0,
        "position": "absolute",
        "top": 0,
        "width": "100%",
      }
    }
    testID="RNE__Overlay__backdrop"
  />
  <View
    pointerEvents="box-none"
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgb(255, 255, 255)",
          "borderRadius": 3,
          "padding": 10,
          "shadowColor": "rgba(0, 0, 0, .3)",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowRadius": 4,
        }
      }
    >
      <Text>
        I'm in an Overlay
      </Text>
    </View>
  </View>
</Modal>
`;

exports[`Overlay should be able to render fullscreen 1`] = `
<Component
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <TouchableWithoutFeedback
    onPress={[Function]}
    testID="RNE__Overlay__backdrop"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(0, 0, 0, .4)",
          "height": "100%",
          "justifyContent": "center",
          "left": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
      testID="backdrop"
    />
  </TouchableWithoutFeedback>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgb(0, 0, 0)",
          "borderRadius": 3,
          "height": "100%",
          "padding": 10,
          "shadowColor": "rgba(0, 0, 0, .3)",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowRadius": 4,
          "width": "100%",
        }
      }
    >
      <Text>
        I'm in an Overlay
      </Text>
    </View>
  </View>
</Component>
`;

exports[`Overlay should render without issues 1`] = `
<Component
  hardwareAccelerated={false}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <TouchableWithoutFeedback
    onPress={[Function]}
    testID="RNE__Overlay__backdrop"
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(0, 0, 0, .4)",
          "height": "100%",
          "justifyContent": "center",
          "left": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
      testID="backdrop"
    />
  </TouchableWithoutFeedback>
  <View
    pointerEvents="box-none"
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgb(0, 0, 0)",
          "borderRadius": 3,
          "padding": 10,
          "shadowColor": "rgba(0, 0, 0, .3)",
          "shadowOffset": Object {
            "height": 1,
            "width": 0,
          },
          "shadowRadius": 4,
        }
      }
    >
      <Text>
        I'm in an Overlay
      </Text>
    </View>
  </View>
</Component>
`;
